{"version":3,"sources":["UI/myModal/myModal.module.css","UI/button/MyButton.module.css","UI/input/MyInput.module.css","UI/select/MySelect.module.css","UI/Loader/Loader.module.css","UI/Navbar/Navbar.js","pages/About.js","hooks/usePosts.js","hooks/useFetching.js","utils/Pages.js","UI/button/MyButton.js","UI/myModal/myModal.js","UI/input/MyInput.js","Components/PostForm.js","UI/select/MySelect.js","Components/PostFilter.js","UI/pagination/Pagination.js","Components/PostItem.js","Components/PostList.js","UI/Loader/Loader.js","API/PostService.js","pages/Posts.js","pages/ErrorPages.js","pages/PostIdPages.js","Components/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","className","to","About","usePost","posts","sort","query","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","useFetching","callback","useState","isLoading","setIsLoading","error","setError","message","getPageCount","totalCount","limit","Math","ceil","getPagesArray","totalPages","result","i","push","MyButton","children","props","classes","myBtn","MyModal","visible","setVisible","rootClasses","myModal","active","join","onClick","myModalContent","e","stopPropagation","MyInput","React","forwardRef","ref","myInpt","PostForm","create","body","setPost","type","placeholder","value","onChange","target","preventDefault","newPost","id","Date","now","MySelect","options","defaultValue","mySlct","event","disabled","map","option","name","PostFilter","setFilter","style","width","selectedSort","Pagination","page","changePage","pagesArray","p","PostItem","remove","router","useHistory","PostList","length","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Loader","cl","loader","PostService","axios","get","params","_limit","_page","response","Posts","setPosts","modal","setModal","setTotalPages","setPage","sortAndSearchPost","useEffect","fetchPost","getAll","data","headers","isPostsLoading","postError","marginTop","margin","color","display","justifyContent","ErrorPages","PostIdPages","useParams","getById","AppRouter","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90949173.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"myModal_myModal__1Pszw\",\"myModalContent\":\"myModal_myModalContent__32iQF\",\"active\":\"myModal_active__2z1XM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__2QDT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInpt\":\"MyInput_myInpt__cEwfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySlct\":\"MySelect_mySlct__1TNd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2u-uR\",\"rotate\":\"Loader_rotate__24-Do\"};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar__links\">\n                <Link to=\"/about\">О сайте</Link>\n                <Link to=\"/posts\">Посты</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            Приложение с вид.уроков\n        </div>\n    );\n};\n\nexport default About;","import {useMemo} from \"react\";\n\nexport const useSortedPosts = (posts, sort) => {\n    const sortedPosts = useMemo(() => {\n        if (sort) {\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\n        } else {\n            return posts\n        }\n    }, [sort, posts])\n\n    return sortedPosts\n}\n\nexport const usePost = (posts, sort, query) => {\n    const sortedPosts = useSortedPosts(posts, sort)\n\n    const sortAndSearchPost = useMemo(() => {\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query))\n    }, [query, sortedPosts])\n    return sortAndSearchPost\n}\n","import {useState} from \"react\";\n\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState('')\n\n    const fetching = async () => {\n        try {\n            setIsLoading(true)\n            await callback()\n        } catch (e) {\n            setError(e.message)\n        } finally {\n            setIsLoading(false)\n        }\n\n    }\n    return [fetching, isLoading, error]\n}","export const getPageCount = (totalCount,limit) => {\n    return Math.ceil(totalCount/limit)\n}\n\nexport const getPagesArray = (totalPages) => {\n    let result = []\n    for (let i = 0; i < totalPages ; i++) {\n        result.push(i+1)\n    }\n    return result\n}\n","import React from 'react';\nimport classes from './MyButton.module.css'\n\nconst MyButton = ({children, ...props}) => {\n    return (\n        <button {...props} className={classes.myBtn}>\n            {children}\n        </button>\n    );\n};\n\nexport default MyButton;","import React from 'react';\nimport classes from './myModal.module.css'\n\nconst MyModal = ({children,visible,setVisible}) => {\n\n    const rootClasses = [classes.myModal]\n    if (visible){\n        rootClasses.push(classes.active)\n    }\n\n    return (\n        <div className={rootClasses.join(' ')} onClick={()=> setVisible(false)}>\n            <div className={classes.myModalContent} onClick={e => e.stopPropagation()}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default MyModal;","import React from 'react';\nimport classes from './MyInput.module.css'\n\nconst MyInput = React.forwardRef((props,ref) => {\n    return (\n        <input ref={ref} className={classes.myInpt} {...props}/>\n    );\n});\n\nexport default MyInput;","import React, {useState} from 'react';\nimport MyInput from \"../UI/input/MyInput\";\nimport MyButton from \"../UI/button/MyButton\";\n\nconst PostForm = ({create}) => {\n\n    const [post, setPost] = useState({title: '', body: ''})\n\n    let addNewPost = (e) => {\n        e.preventDefault() //Предотвращает дефолтное поведение браузера\n        const newPost = {\n            ...post, id: Date.now()\n        }\n        create(newPost)\n        setPost({title: '', body: ''})\n\n    }\n\n    return (\n        <div>\n            <form>\n                <MyInput\n                    type=\"text\" placeholder=\"Название поста\"\n                    value={post.title}\n                    onChange={e => (setPost({...post, title: e.target.value}))}/>\n                <MyInput\n                    value={post.body}\n                    type=\"text\" placeholder=\"Описание поста\"\n                    onChange={e => (setPost({...post, body: e.target.value}))}/>\n                <MyButton onClick={addNewPost}>создать пост</MyButton>\n            </form>\n        </div>\n    );\n};\n\nexport default PostForm;","import React from 'react';\nimport classes from './MySelect.module.css'\n\nconst MySelect = ({options, defaultValue, value, onChange}) => {\n    return (\n        <select\n            className={classes.mySlct}\n            value={value}\n            onChange={event => onChange(event.target.value)}\n        >\n            <option disabled value=\"\">{defaultValue}</option>\n            {\n                options.map(\n                    option =>\n                        <option key={option.value} value={option.value}>\n                            {option.name}\n                        </option>\n                )\n            }\n        </select>\n    );\n};\n\nexport default MySelect;","import React from 'react';\nimport MyInput from \"../UI/input/MyInput\";\nimport MySelect from \"../UI/select/MySelect\";\n\nconst PostFilter = ({filter, setFilter}) => {\n    return (\n        <div>\n            <MyInput\n                value={filter.query}\n                onChange={e => setFilter({...filter, query: e.target.value})}\n                style={{width: '50%'}}\n                placeholder=\"Поиск...\"\n            />\n            <MySelect\n                value={filter.sort}\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\n                defaultValue=\"Сортировка по\"\n                options={[\n                    {value: 'title', name: 'По названию'},\n                    {value: 'body', name: 'По описанию'}\n                ]}/>\n        </div>\n    );\n};\n\nexport default PostFilter;","import React from 'react';\nimport {getPagesArray} from \"../../utils/Pages\";\n\nconst Pagination = ({totalPages, page,changePage}) => {\n    const pagesArray = getPagesArray(totalPages)\n    return (\n        <div className=\"page__wrapper\">\n            {\n                pagesArray.map(p =>\n                    <span\n                        onClick={() => changePage(p)}\n                        key={p}\n                        className={page === p\n                            ? 'page page__current'\n                            : 'page'\n                        }>{p}</span>)\n            }\n        </div>\n    );\n};\n\nexport default Pagination;","import React from 'react';\nimport MyButton from \"../UI/button/MyButton\";\nimport {useHistory} from 'react-router-dom'\nconst PostItem = ({post,remove}) => {\n\n    const router = useHistory()\n    return (\n        <div className=\"post\">\n            <div className=\"post_content\">\n                <strong>{post.id} {post.title}</strong>\n                <div>\n                    {post.body}\n                </div>\n            </div>\n            <div className=\"post_btns\">\n                <MyButton onClick={()=>router.push(`/posts/${post.id}`)}>Открыть</MyButton>\n                <MyButton onClick={()=>remove(post)}>Удалить</MyButton>\n            </div>\n        </div>\n    );\n};\n\nexport default PostItem;","import React from 'react';\nimport PostItem from \"./PostItem\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nconst PostList = ({posts, title, remove}) => {\n\n    if (!posts.length) {\n        return (\n            <h1 style={{textAlign: 'center'}}>Посты не найдены !</h1>\n        )\n    }\n\n    return (\n        <div>\n            <h1 style={{textAlign: 'center'}}>{title}</h1>\n            <TransitionGroup>\n                {\n                    posts.map((post, index) =>\n                        <CSSTransition\n                        key={post.id}\n                        timeout={500}\n                        classNames=\"post\"\n                        >\n                            <PostItem remove={remove} number={index + 1} post={post} />\n                        </CSSTransition>\n                    )\n                }\n            </TransitionGroup>\n        </div>\n    );\n};\n\nexport default PostList;","import React from 'react';\nimport cl from './Loader.module.css'\n\nconst Loader = () => {\n    return (\n        <div className={cl.loader}>\n            \n        </div>\n    );\n};\n\nexport default Loader;","import axios from \"axios\";\n\nexport default class PostService {\n    static async getAll(limit = 10, page = 1) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n            params: {\n                _limit: limit,\n                _page: page\n            }\n        })\n        return response\n    }\n\n    static async getById(id) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts'+id)\n\nreturn response\n    }\n}","import React, {useEffect, useState} from 'react'\nimport {usePost} from \"../hooks/usePosts\";\nimport {useFetching} from \"../hooks/useFetching\";\nimport {getPageCount, getPagesArray} from \"../utils/Pages\";\nimport MyButton from \"../UI/button/MyButton\";\nimport MyModal from \"../UI/myModal/myModal\";\nimport PostForm from \"../Components/PostForm\";\nimport PostFilter from \"../Components/PostFilter\";\nimport Pagination from \"../UI/pagination/Pagination\";\nimport PostList from \"../Components/PostList\";\nimport Loader from \"../UI/Loader/Loader\";\nimport PostService from \"../API/PostService\";\n\n\nconst Posts = (props) => {\n    const [posts, setPosts] = useState([\n        {id: 1, title: \"Javascript\", body: \"Мультипарадигменный язык программирования.\"},\n        {\n            id: 2,\n            title: \"Ruby \",\n            body: \"Динамический, рефлективный, интерпретируемый высокоуровневый язык программирования.\"\n        },\n        {id: 3, title: \"React\", body: \"Библиотека для создания пользовательских интерфейсов.\"}\n    ]) //Посты\n    const [filter, setFilter] = useState({sort: '', query: ''})  //Фильтрация\n    const [modal, setModal] = useState(false) //Эффект затемнения\n    const [totalPages, setTotalPages] = useState(0)\n    const [limit, setLimit] = useState(10)\n    const [page, setPage] = useState(1)\n    const sortAndSearchPost = usePost(posts, filter.sort, filter.query) //Сортировка и Поиск постов\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n        setModal(false)\n    } //Создание поста\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n    } //Удаление поста\n    useEffect(() => {\n        fetchPost()\n    }, [page]) //Монтирование постов\n    const [fetchPost, isPostsLoading, postError] = useFetching(async () => {\n        const response = await PostService.getAll(limit, page);\n        setPosts(response.data)\n        const totalCount = response.headers['x-total-count']\n        setTotalPages(getPageCount(totalCount, limit))\n    }) //Крутилка\n    const pagesArray = getPagesArray(totalPages)\n    const changePage = (page) => {\n        setPage(page)\n    }\n\n\n    return (\n        <div className=\"App\">\n            <MyButton style={{marginTop: '30px'}} onClick={() => setModal(true)}>Создать пост</MyButton>\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px 0'}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {postError &&\n            <h1 style={{color: 'red', display: 'flex', justifyContent: 'center'}}>Произошла ошибка {postError}</h1>\n            }\n            {\n                isPostsLoading\n                    ? <div style={{display: 'flex', justifyContent: 'center'}}><Loader/></div>\n                    : <PostList remove={removePost} posts={sortAndSearchPost} title=\"Список постов\"/>\n            }\n            <Pagination totalPages={totalPages} page={page} changePage={changePage}/>\n\n\n        </div>\n    )\n}\n\nexport default Posts","import React from 'react';\n\nconst ErrorPages = () => {\n    return (\n        <h1 style={{color:'red'}}>\n            Ошибка 404!\n        </h1>\n    );\n};\n\nexport default ErrorPages;","import React from 'react';\nimport {useParams} from 'react-router-dom'\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\n\nconst PostIdPages = () => {\n    const params = useParams()\n    const[fetchPostById,isLoading,error] = useFetching(async ()=>{\n        const response = await PostService.getById(params.id)\n    })\n\n    return (\n        <div>\n            <h1>На странице поста c ID : {params.id}</h1>\n        </div>\n\n    );\n};\n\nexport default PostIdPages;","import React from 'react';\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Posts from \"../pages/Posts\";\nimport ErrorPages from \"../pages/ErrorPages\";\nimport PostIdPages from \"../pages/PostIdPages\";\n\nconst AppRouter = () => {\n    return (\n        <Switch>\n            <Route path=\"/about\"><About/></Route>\n            <Route exact path=\"/posts\"><Posts/></Route>\n            <Route exact path=\"/posts/:id\"><PostIdPages/></Route>\n            <Route path=\"/error\"><ErrorPages/></Route>\n            <Redirect to=\"/error\"/>\n        </Switch>\n    );\n};\n\nexport default AppRouter;","import React from 'react'\nimport './styles/App.css'\nimport {BrowserRouter} from \"react-router-dom\";\nimport Navbar from \"./UI/Navbar/Navbar\";\nimport AppRouter from \"./Components/AppRouter\";\n\n\nconst App = (props) => {\n\n    return (\n        <BrowserRouter>\n            <Navbar/>\n           <AppRouter/>\n        </BrowserRouter>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}